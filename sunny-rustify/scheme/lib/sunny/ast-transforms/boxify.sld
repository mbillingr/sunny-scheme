(define-library (sunny ast-transforms boxify)
  (export boxify)

  (import (scheme base)
          (sunny ast)
          (sunny variable))

  (begin
    (define (boxify node)
      (define (transform node ignore)
        (cond ((eq? (node 'kind) 'ABSTRACTION)
               (boxify-abstraction (node 'get-vars)
                                   (node 'get-vars)
                                   (node 'get-body)))
              ((eq? (node 'kind) 'VARARG-ABSTRACTION)
               (boxify-vararg-abstraction (node 'get-vars)
                                          (node 'get-varvar)
                                          (cons (node 'get-varvar)
                                                (node 'get-vars))
                                          (node 'get-body)))
              ((eq? (node 'kind) 'FIXLET)
               (boxify-fixlet (node 'get-vars)
                              (node 'get-args)
                              (node 'get-body)))
              (else (ignore))))
      (node 'transform transform))


    (define (boxify-abstraction vars var* body)
      (cond ((null? var*)
             (make-abstraction vars (boxify body)))
            ((variable-mutable? (car var*))
             (local-boxify! (car var*))
             (boxify-abstraction vars (cdr var*)
                                 (make-boxify (variable-name (car var*)) body)))
            (else
              (boxify-abstraction vars (cdr var*) body))))

    (define (boxify-vararg-abstraction vars varvar var* body)
      (if (null? var*)
          (make-vararg-abstraction vars varvar (boxify body))
          (if (variable-mutable? (car var*))
              (begin (local-boxify! (car var*))
                     (boxify-vararg-abstraction vars varvar
                                                (cdr var*)
                                                (make-boxify (variable-name (car var*) body))))
              (boxify-vararg-abstraction vars varvar (cdr var*) body))))

    (define (boxify-fixlet vars args body)
      (make-fixlet vars args
        (boxify-vars! vars (boxify body))))

    (define (boxify-vars! var* body)
      (cond ((null? var*)
             body)
            ((variable-mutable? (car var*))
             (local-boxify! (car var*))
             (boxify-vars! (cdr var*)
                           (make-boxify (variable-name (car var*))
                                        body)))
            (else (boxify-vars! (cdr var*) body))))))
