(define-library (sunny ast-transforms)extract-definitions
  (export extract-definitions)

  (import (scheme base)
          (sunny ast)
          (sunny variable))

  (begin
    (define (extract-definitions node)
      (define (transform node transform-children)
        (cond ((eq? (node 'kind) 'DEFINITION)
               (extract-definition node))
              (else (transform-children))))
      (node 'transform transform))


    (define (extract-definition node)
      (let ((val (node 'get-val)))
        (cond ((eq? 'ABSTRACTION (val 'kind))
               (make-nop))
              ; (make-definition (node 'get-name)
              ;                  (node 'get-var)
              ;                  (make-abstraction (val 'get-params)
              ;                                    (val 'get-vars)
              ;                                    (close-procedures (val 'get-body)))))
              ((eq? 'VARARG-ABSTRACTION (val 'kind))
              ; (make-definition (node 'get-name)
              ;                  (node 'get-var)
              ;                  (make-vararg-abstraction (val 'get-params)
              ;                                           (val 'get-vararg)
              ;                                           (val 'get-vars)
              ;                                           (val 'get-varvar)
              ;                                           (close-procedures (val 'get-body)))))
               (make-nop))
              (else (make-definition (node 'get-name)
                                     (node 'get-var)
                                     (close-procedures val))))))))
